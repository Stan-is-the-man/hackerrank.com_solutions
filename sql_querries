# Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain
duplicates.

SELECT DISTINCT CITY
FROM STATION
WHERE CITY REGEXP '^[aeiouAEIOU]'
ORDER BY CITY;

################################################################
Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates

SELECT DISTINCT(CITY)
FROM STATION
WHERE CITY REGEXP '[aeiouAEIOU]$'
ORDER BY CITY;
################################################################
Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last
characters. Your result cannot contain duplicates.

SELECT DISTINCT(CITY)
FROM STATION
WHERE CITY REGEXP '[aeiouAEIOU]$'
AND CITY REGEXP '^[aeiouAEIOU]'
ORDER BY CITY;
################################################################
Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

SELECT DISTINCT(CITY)
FROM STATION
WHERE CITY NOT REGEXP '^[aeiouAEIOU]';
################################################################
Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.

SELECT DISTINCT(CITY)
FROM STATION
WHERE CITY NOT REGEXP '^[aeiouAEIOU]'
AND CITY NOT REGEXP '[aeiouAEIOU]$' ;
################################################################
Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters
of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby,
etc.), secondary sort them by ascending ID.

SELECT NAME
FROM STUDENTS
WHERE Marks > 75
ORDER BY RIGHT(NAME,3), ID;
################################################################
Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary
 greater than  per month who have been employees for less than  months. Sort your result by ascending employee_id.

SELECT name
FROM Employee
WHERE SALARY > 2000
AND months < 10
ORDER BY employee_id;
################################################################


